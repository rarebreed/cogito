# Tasks shared across roles in the same playbook (not for tasks shared across playbooks)
---
- name: Enable cgroups
  become: true
  lineinfile:
    dest: /boot/firmware/cmdline.txt
    line: cgroup_enable=memory cgroup_memory=1"
    insertbefore: dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=LABEL=writable rootfstype=ext4 elevator=deadline rootwait fixrtc quiet splash
    state: present
  register: enable_cgroups
  tags:
    - setup

- name: Reboot raspberry pi
  become: true
  when: enable_cgroups.changed
  reboot:
    reboot_timeout: 180
  tags:
    - setup

- name: Installs micro k8s
  become: true
  snap:
    name: microk8s
    state: present
    classic: yes
  tags:
    - setup
    - install
    - microk8s

- name: Add ubuntu to microk8s group
  become: true
  user:
    name: ubuntu
    groups:
      - microk8s
  tags:
    - setup
    - install
    - microk8s

- name: Set ~/.kube owner to ubuntu
  become: true
  file:
    path: ~/.kube
    owner: ubuntu
    recurse: yes
    force: yes
  register: kube
  tags:
    - setup
    - install

# TODO: Have a task to reboot if ubuntu is not in the microk8s group
- name: Reboot raspberry pi for microk8s group
  become: true
  when: kube.changed
  reboot:
    reboot_timeout: 180
  tags:
    - setup
    - install

# This will loop through each worker one by one, calling the set of tasks in join.yml
- name: Join nodes
  include_tasks: join.yml worker={{ item }}
  # FIXME: Find a way to loop through group["workers"]
  loop:
    - rpi4_worker1
    - rpi4_worker2
    - rpi4_worker3

# TODO: for the workers, use the token value as a variable to join to main

- name: Add microk8s add-ons
  shell: microk8s enable {{ item }}
  with_items:
    - helm3
    - dns
    - linkerd
    